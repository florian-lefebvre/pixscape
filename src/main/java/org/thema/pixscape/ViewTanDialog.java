/*
 * Copyright (C) 2015 Laboratoire ThéMA - UMR 6049 - CNRS / Université de Franche-Comté
 * http://thema.univ-fcomte.fr
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


package org.thema.pixscape;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Frame;
import java.awt.event.MouseEvent;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.Raster;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import javax.swing.JDialog;
import org.geotools.geometry.DirectPosition2D;
import org.thema.drawshape.PanelMap;
import org.thema.drawshape.PointShape;
import org.thema.drawshape.SelectableShape;
import org.thema.drawshape.image.RasterShape;
import org.thema.drawshape.layer.DefaultGroupLayer;
import org.thema.drawshape.layer.RasterLayer;
import org.thema.drawshape.style.PointStyle;
import org.thema.drawshape.style.RasterStyle;
import org.thema.drawshape.style.table.ColorRamp;
import org.thema.drawshape.style.table.UniqueColorTable;
import org.thema.drawshape.ui.MapViewer;
import org.thema.pixscape.view.ViewTanResult;

/**
 * Dialog form for iteractively calculates tangential view.
 * 
 * @author Gilles Vuidel
 */
public class ViewTanDialog extends javax.swing.JDialog implements PanelMap.ShapeMouseListener {


    private Bounds bounds = new Bounds();
    private JDialog viewFrame;
    private MapViewer viewMapViewer;
    
    private Project project;
    private MapViewer mapViewer;
    private PointShape centreShape;
    private RasterShape viewshed;
    
    private final MetricResultDialog metricDlg;
    
    /** 
     * Creates new form ViewShedDialog 
     * @param parent the parent frame
     * @param project the current project
     * @param mapViewer the map viewer for refreshing view
     */
    public ViewTanDialog(Frame parent, Project project, MapViewer mapViewer) {
        super(parent, false);
        initComponents();
        setLocationRelativeTo(parent);
        this.project = project;
        this.mapViewer = mapViewer;
        
        zEyeTextField.setText(""+project.getStartZ());      
        
        double x = mapViewer.getLayers().getBounds().getCenterX();
        double y = mapViewer.getLayers().getBounds().getCenterY();
        pointTextField.setText(x + ", " + y);
        
        metricDlg = new MetricResultDialog(this, true, project.getDefaultScaleData().getCodes());
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        closeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pointTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        zEyeTextField = new javax.swing.JTextField();
        boundsButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        landRadioButton = new javax.swing.JRadioButton();
        distRadioButton = new javax.swing.JRadioButton();
        zRadioButton = new javax.swing.JRadioButton();
        metricsButton = new javax.swing.JButton();
        viewshedCheckBox = new javax.swing.JCheckBox();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/thema/pixscape/Bundle"); // NOI18N
        setTitle(bundle.getString("ViewTanDialog.title")); // NOI18N
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        closeButton.setText(bundle.getString("ViewTanDialog.closeButton.text")); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("ViewTanDialog.jLabel1.text")); // NOI18N

        pointTextField.setText(bundle.getString("ViewTanDialog.pointTextField.text")); // NOI18N

        jLabel2.setText(bundle.getString("ViewTanDialog.jLabel2.text")); // NOI18N

        zEyeTextField.setText(bundle.getString("ViewTanDialog.zEyeTextField.text")); // NOI18N

        boundsButton.setText(bundle.getString("ViewTanDialog.boundsButton.text")); // NOI18N
        boundsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boundsButtonActionPerformed(evt);
            }
        });

        updateButton.setText(bundle.getString("ViewTanDialog.updateButton.text")); // NOI18N
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("ViewTanDialog.jPanel1.border.title"))); // NOI18N

        buttonGroup1.add(landRadioButton);
        landRadioButton.setSelected(true);
        landRadioButton.setText(bundle.getString("ViewTanDialog.landRadioButton.text")); // NOI18N

        buttonGroup1.add(distRadioButton);
        distRadioButton.setText(bundle.getString("ViewTanDialog.distRadioButton.text")); // NOI18N

        buttonGroup1.add(zRadioButton);
        zRadioButton.setText(bundle.getString("ViewTanDialog.zRadioButton.text")); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(landRadioButton)
                    .add(distRadioButton)
                    .add(zRadioButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(landRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(distRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(zRadioButton)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        metricsButton.setText(bundle.getString("ViewTanDialog.metricsButton.text")); // NOI18N
        metricsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metricsButtonActionPerformed(evt);
            }
        });

        viewshedCheckBox.setText(bundle.getString("ViewTanDialog.viewshedCheckBox.text")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(metricsButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(viewshedCheckBox))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pointTextField))
                    .add(layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(zEyeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(boundsButton))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(updateButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(closeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(pointTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(zEyeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(boundsButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(viewshedCheckBox)
                        .add(31, 31, 31)
                        .add(metricsButton)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(updateButton)
                            .add(closeButton))
                        .add(6, 6, 6))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        doClose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void boundsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boundsButtonActionPerformed
        BoundsDialog dlg = new BoundsDialog((Frame) this.getParent(), bounds);
        dlg.setVisible(true);
        if(dlg.isOk) {
            bounds = dlg.bounds;
        }
    }//GEN-LAST:event_boundsButtonActionPerformed

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        mapViewer.removeShapeMouseListener(this);
        mapViewer.getMap().removeShapes(Arrays.asList(centreShape));
        if(viewshed != null) {
            mapViewer.getMap().removeShapes(Arrays.asList(viewshed));
        }
    }//GEN-LAST:event_formComponentHidden

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        mapViewer.addMouseListener(this);
        mapViewer.setCursorMode(PanelMap.INPUT_CURSOR_MODE);
        
        String[] coords = pointTextField.getText().split(",");
        Point2D p = new Point2D.Double(Double.parseDouble(coords[0]), Double.parseDouble(coords[1]));
        centreShape = new PointShape(p);
        centreShape.setStyle(new PointStyle(Color.BLACK, Color.RED));
        mapViewer.getMap().addShape(centreShape);
    }//GEN-LAST:event_formComponentShown

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        String[] coords = pointTextField.getText().split(",");
        Point2D p = new Point2D.Double(Double.parseDouble(coords[0]), Double.parseDouble(coords[1]));
        mouseClicked(p, null, null, 0);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void metricsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metricsButtonActionPerformed
        metricDlg.setLocation(getX(), getY() + getHeight());
        metricDlg.setVisible(true);
    }//GEN-LAST:event_metricsButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if(viewFrame != null) {
            viewFrame.setVisible(false);
            viewFrame.dispose();
            viewFrame = null;
            viewMapViewer = null;
        }
    }//GEN-LAST:event_formWindowClosed

    @Override
    public void mouseClicked(Point2D p, List<SelectableShape> shapes, MouseEvent sourceEvent, int cursorMode) {
        pointTextField.setText(p.getX() + "," + p.getY());
        centreShape.setPoint2D(p);
        mapViewer.getMap().fullRepaint();
        
        if(viewshedCheckBox.isSelected()) {
            if(viewshed != null) {
                mapViewer.getMap().removeShapes(Arrays.asList(viewshed));
            }
            Raster view = project.getDefaultComputeView().calcViewShed(
                    new DirectPosition2D(p), Double.parseDouble(zEyeTextField.getText()), -1, true, bounds).getView();
            viewshed = new RasterShape(view,
                    project.getDefaultScaleData().getGridGeometry().getEnvelope2D(), new RasterStyle(
                            new Color[] {new Color(0, 0, 0, 120), new Color(0, 0, 0, 0)}, 255, new Color(0, 0, 0, 0)), true);
            mapViewer.getMap().addShape(viewshed);
        }

        ViewTanResult result = project.getDefaultComputeView().calcViewTan(
                new DirectPosition2D(p), Double.parseDouble(zEyeTextField.getText()), bounds);

        Rectangle2D r = new Rectangle2D.Double(bounds.getOrientation()-bounds.getAmplitude()/2, -90, bounds.getAmplitude(), 180);
        DefaultGroupLayer gl = new DefaultGroupLayer("Tangential view", true);
        if(zRadioButton.isSelected()) {
            RasterStyle s = new RasterStyle(ColorRamp.RAMP_DEM);
//                s.setNoDataValue(-1000);
            gl.addLayerFirst(new RasterLayer("Elevation", new RasterShape(result.getElevationView(), r, s, true)));
        }
        if(distRadioButton.isSelected()) {
            RasterStyle s = new RasterStyle();
//                s.setNoDataValue(-1);
            gl.addLayerFirst(new RasterLayer("Distance", new RasterShape(result.getDistanceView(), r, s, true)));
        }
        if(project.hasLandUse() && landRadioButton.isSelected()) {
            RasterStyle s = new RasterStyle(new UniqueColorTable((Map)project.getLandColors()), false, false);
            s.setNoDataValue(-1);
            gl.addLayerFirst(new RasterLayer("Land use", new RasterShape(result.getLanduseView(), r, s, true)));
        }

        if(viewFrame == null) {
            viewMapViewer = new MapViewer();
            viewMapViewer.setTreeLayerVisible(true);
            viewFrame = new JDialog(this);
            viewFrame.setAlwaysOnTop(false);
            viewFrame.setTitle("Tangential view");
            viewFrame.getContentPane().add(viewMapViewer, BorderLayout.CENTER);
            viewFrame.pack();
            viewFrame.setLocationRelativeTo(null);
            viewFrame.setDefaultCloseOperation(HIDE_ON_CLOSE);
        }
        viewFrame.setVisible(true);
        viewMapViewer.setRootLayer(gl);

        metricDlg.setResult(result);
    }
    
    private void doClose() {
        setVisible(false);
    }

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boundsButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton closeButton;
    private javax.swing.JRadioButton distRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton landRadioButton;
    private javax.swing.JButton metricsButton;
    private javax.swing.JTextField pointTextField;
    private javax.swing.JButton updateButton;
    private javax.swing.JCheckBox viewshedCheckBox;
    private javax.swing.JTextField zEyeTextField;
    private javax.swing.JRadioButton zRadioButton;
    // End of variables declaration//GEN-END:variables

}
