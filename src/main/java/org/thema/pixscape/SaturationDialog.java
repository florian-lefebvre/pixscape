/*
 * Copyright (C) 2015 Laboratoire ThéMA - UMR 6049 - CNRS / Université de Franche-Comté
 * http://thema.univ-fcomte.fr
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


package org.thema.pixscape;

import java.awt.Color;
import java.awt.Frame;
import java.awt.event.MouseEvent;
import java.awt.geom.Point2D;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.geotools.coverage.grid.GridCoordinates2D;
import org.geotools.geometry.DirectPosition2D;
import org.locationtech.jts.geom.Coordinate;
import org.locationtech.jts.geom.Geometry;
import org.locationtech.jts.util.GeometricShapeFactory;
import org.thema.common.collection.TreeMapList;
import org.thema.data.IOFeature;
import org.thema.data.feature.DefaultFeature;
import org.thema.data.feature.Feature;
import org.thema.drawshape.PanelMap;
import static org.thema.drawshape.PanelMap.INPUT_CURSOR_MODE;
import org.thema.drawshape.PointShape;
import org.thema.drawshape.SelectableShape;
import org.thema.drawshape.layer.DefaultGroupLayer;
import org.thema.drawshape.layer.DefaultLayer;
import org.thema.drawshape.layer.FeatureLayer;
import org.thema.drawshape.layer.Layer;
import org.thema.drawshape.style.FeatureStyle;
import org.thema.drawshape.style.PointStyle;
import org.thema.drawshape.ui.MapViewer;
import org.thema.pixscape.view.SimpleComputeView;

/**
 * Dialog form for iteractively calculates saturation view (viewshed).
 * 
 * @author Gilles Vuidel
 */
public class SaturationDialog extends javax.swing.JDialog implements PanelMap.ShapeMouseListener {

    private boolean isOk = false;
    
    private final MapViewer mapViewer;
    private final Project project;

    private File objectFile;
    private List<DefaultFeature> objects;
            
    private PointShape centreShape;
    private DefaultLayer centreLayer;
    private DefaultGroupLayer layers;
    
    
    /** 
     * Creates new form ViewShedDialog 
     * @param parent the parent frame
     * @param project the current project
     * @param mapViewer the map viewer for refreshing view
     */
    public SaturationDialog(Frame parent, Project project, MapViewer mapViewer) {
        super(parent, false);
        this.project = project;
        initComponents();
        getRootPane().setDefaultButton(updateButton);
        
        this.mapViewer = mapViewer;
        double x = mapViewer.getLayers().getBounds().getCenterX();
        double y = mapViewer.getLayers().getBounds().getCenterY();
        pointTextField.setText(x + ", " + y);
        
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pointTextField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        selectVectorLayerPanel = new org.thema.data.ui.SelectVectorLayerPanel();
        jLabel4 = new javax.swing.JLabel();
        maxDistSpinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/thema/pixscape/Bundle"); // NOI18N
        setTitle(bundle.getString("SaturationDialog.title")); // NOI18N
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        okButton.setText(bundle.getString("SaturationDialog.okButton.text")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(bundle.getString("SaturationDialog.cancelButton.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("SaturationDialog.jLabel1.text")); // NOI18N

        pointTextField.setText(bundle.getString("SaturationDialog.pointTextField.text")); // NOI18N

        updateButton.setText(bundle.getString("SaturationDialog.updateButton.text")); // NOI18N
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        selectVectorLayerPanel.setDescription(bundle.getString("SaturationDialog.selectVectorLayerPanel.description")); // NOI18N

        jLabel4.setText(bundle.getString("SaturationDialog.jLabel4.text")); // NOI18N

        maxDistSpinner.setModel(new javax.swing.SpinnerNumberModel(10.0d, 0.0d, null, 1.0d));

        jLabel5.setText(bundle.getString("SaturationDialog.jLabel5.text")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(selectVectorLayerPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(updateButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(okButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton))
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pointTextField))
                    .add(layout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(maxDistSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel5)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {cancelButton, okButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(pointTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(selectVectorLayerPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(maxDistSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 42, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelButton)
                    .add(okButton)
                    .add(updateButton))
                .addContainerGap())
        );

        getRootPane().setDefaultButton(okButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        isOk = true;
        doClose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        isOk = false;
        doClose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        String[] coords = pointTextField.getText().split(",");
        Point2D p = new Point2D.Double(Double.parseDouble(coords[0]), Double.parseDouble(coords[1]));
        mouseClicked(p, null, null, INPUT_CURSOR_MODE);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        mapViewer.addMouseListener(this);
        mapViewer.setCursorMode(PanelMap.INPUT_CURSOR_MODE);
        String[] coords = pointTextField.getText().split(",");
        Point2D p = new Point2D.Double(Double.parseDouble(coords[0]), Double.parseDouble(coords[1]));
        centreShape = new PointShape(p);
        centreShape.setStyle(new PointStyle(Color.BLACK, Color.RED));
        centreLayer = new DefaultLayer("Centre", centreShape);
        centreLayer.setRemovable(true);
    }//GEN-LAST:event_formComponentShown

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        mapViewer.removeShapeMouseListener(this);
        if(!isOk) {
            mapViewer.getLayers().removeLayer(layers);
        }
    }//GEN-LAST:event_formComponentHidden

    @Override
    public void mouseClicked(Point2D p, List<SelectableShape> shapes, MouseEvent sourceEvent, int cursorMode) {
        if(cursorMode != INPUT_CURSOR_MODE) {
            return;
        }
        mapViewer.getLayers().removeLayer(layers);
        
        pointTextField.setText(p.getX() + "," + p.getY());
        centreShape.setPoint2D(p);
        layers = new DefaultGroupLayer("Saturation", true);
        layers.setRemovable(true);
        layers.addLayerFirst(centreLayer);
        
        try {
            if(objects == null || objectFile == null || !objectFile.equals(selectVectorLayerPanel.getSelectedFile())) {
                objectFile = selectVectorLayerPanel.getSelectedFile();
                objects = IOFeature.loadFeatures(objectFile);
            }
        } catch (IOException ex) {
            throw new RuntimeException(ex);
        }
        Saturation saturation = new Saturation(project);
        saturation.calc(new Coordinate(p.getX(), p.getY()), (Double)maxDistSpinner.getValue()*1000, objects, selectVectorLayerPanel.getIdField());
        List<DefaultFeature> sectors = saturation.getSectors();


            Layer layer = new FeatureLayer("View objects", saturation.getObjectSeen(), 
                    new PointStyle(Color.BLACK, new Color(0, 0, 200)), project.getCRS());
            layer.setRemovable(true);
            layers.addLayerLast(layer);

            layer = new FeatureLayer("Sectors", sectors, 
                    new FeatureStyle(new Color(255, 0, 0, 128), Color.LIGHT_GRAY), project.getCRS());
            layer.setRemovable(true);
            layers.addLayerLast(layer);
        
        layer = new FeatureLayer("Free sector", Arrays.asList(saturation.getFreeSector()), 
                new FeatureStyle(new Color(50, 255, 50, 128), Color.LIGHT_GRAY), project.getCRS());
        layer.setRemovable(true);
        layers.addLayerLast(layer);

        ((DefaultGroupLayer)mapViewer.getLayers()).addLayerFirst(layers);
        
    }
    
    private void doClose() {
        setVisible(false);
    }

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSpinner maxDistSpinner;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField pointTextField;
    private org.thema.data.ui.SelectVectorLayerPanel selectVectorLayerPanel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

}
